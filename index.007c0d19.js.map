{"mappings":"AACAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAaF,SAASG,cAAc,sBACpCC,EAAcJ,SAASG,cAAc,iBACrCE,EAAeL,SAASG,cAAc,kBAEtCG,EAAa,WACjBJ,EAAWK,UAAUC,OAAO,U,EAG9BJ,EAAYH,iBAAiB,QAASK,GACtCD,EAAaJ,iBAAiB,QAASK,E,IAIxC,WACC,IAAMG,EAAO,CACXC,aAAcV,SAASG,cAAc,qBACrCQ,cAAeX,SAASG,cAAc,sBACtCS,MAAOZ,SAASG,cAAc,iBAMhC,SAASU,IACPJ,EAAKG,MAAML,UAAUC,OAAO,Y,CAJ9BC,EAAKC,aAAaT,iBAAiB,QAASY,GAC5CJ,EAAKE,cAAcV,iBAAiB,QAASY,EAK9C,CAbA,GA+BD,SAAwBC,GAetB,IAdA,IAAIC,EAAgB,SAAUC,GAE5B,IAAqD,KADjDC,EAAWC,KAAKC,eACPZ,UAAUa,SAAS,iBAC9B,IAAIH,EAAWA,EAASE,cAE1B,IAAIE,EAAaC,SAASL,EAASM,QAAQC,WAAa,GACpDN,KAAKX,UAAUa,SAAS,oBAC1BC,GAAc,EACLH,KAAKX,UAAUa,SAAS,eACjCC,GAAc,GAEhBJ,EAASM,QAAQC,UAAYH,EAC7BI,EAAeR,E,EAERS,EAAI,EAAGA,EAAIZ,EAAUa,OAAQD,IAAK,CACzC,IAAIE,EAAWd,EAAUY,GACrBG,EAAQD,EAASzB,cAAc,mBAE/B2B,EADQF,EAASG,iBAAiB,yBACrBJ,OACbK,EAAYH,EAAMI,YAClBC,EAAoE,IAAvDC,KAAKC,MAAMJ,EAAY,EAAIG,KAAKE,IAAIF,KAAKG,GAAKR,IAC/DD,EAAMU,MAAMC,UAAY,6BAA+BN,EAAa,MACpE,IAAIO,EAAUb,EAASzB,cAAc,iCACrB,OAAZsC,GACFA,EAAQxC,iBAAiB,QAASc,GAAe,GAEnD,IAAI2B,EAAWd,EAASzB,cAAc,0BACrB,OAAbuC,GACFA,EAASzC,iBAAiB,QAASc,GAAe,GAEpDU,EAAeG,E,CAGjB,SAASH,EAAeR,GAWtB,IAVA,IAAII,EAAaC,SAASL,EAASM,QAAQC,WAAa,GACpDK,EAAQZ,EAASd,cAAc,mBAC/BwC,EAAQ1B,EAASc,iBAAiB,yBAClCD,EAAOa,EAAMhB,OACbK,EAAYH,EAAMI,YAClBC,EAAoE,IAAvDC,KAAKC,MAAMJ,EAAY,EAAIG,KAAKE,IAAIF,KAAKG,GAAKR,IAE3Dc,EAAK,IAAMd,EAGNe,EAAI,EAAGA,EAAIf,EAAMe,IAAK,CAC7B,IAAIC,EAAIzB,EAAauB,EAAKC,EAAID,EAC1BG,EAAQJ,EAAME,GAClBE,EAAMR,MAAMC,UACV,WACAM,EACA,mBACAZ,EACA,iBACEY,GAAGE,WACL,OACFD,EAAMxC,UAAU0C,OAAO,aACvBF,EAAMxC,UAAU0C,OAAO,SACvBF,EAAMxC,UAAU0C,OAAO,oBACvBF,EAAMG,oBAAoB,QAASnC,GAAe,GAClD,IAAIoC,EAAKL,EAAI,IACF,IAAPK,EACFJ,EAAMxC,UAAU6C,IAAI,SACXD,IAAOP,GAAMO,KAAO,IAAOP,GACpCG,EAAMxC,UAAU6C,IAAI,aACpBL,EAAM9C,iBAAiB,QAASc,GAAe,IACtCoC,IAAO,IAAMP,GAAMO,IAAO,EAAIP,IACvCG,EAAMxC,UAAU6C,IAAI,oBACpBL,EAAM9C,iBAAiB,QAASc,GAAe,G,GAMvDsC,CAAerD,SAAS+B,iBAAiB","sources":["src/index.js"],"sourcesContent":["// Hamburger modal mobile menu\ndocument.addEventListener('DOMContentLoaded', () => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    mobileMenu.classList.toggle('is-open');\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n});\n\n// Modal-form\n(() => {\n  const refs = {\n    openModalBtn: document.querySelector('[data-modal-open]'),\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle('is-hidden');\n  }\n})();\n\n// Carousel 3d rotation\n/*\n * My adaptation of:\n *   Flux 3D Carousel\n *   Author: Dean Coulter\n *   Licensed under the MIT license\n *   Version 0.1\n *\n *   - Changed from figure element cards to any html.\n *   - Removed use of id, to allow multiple carousels.\n *   - Blocking of events on cards in the background.\n *   - Dimming of cards in the background.\n *   - Fixed continuous rotation.\n *   - Added functionality for multiple carousels.\n *   - Adding clickable arrow icon buttons on the sides.\n */\nfunction cardCarousel3d(carousels) {\n  var rotateHandler = function (evt) {\n    var carousel = this.parentElement;\n    if (carousel.classList.contains('card-carousel') === false) {\n      var carousel = carousel.parentElement;\n    }\n    var rotate_int = parseInt(carousel.dataset.rotateInt || 0);\n    if (this.classList.contains('counterclockwise')) {\n      rotate_int += 1;\n    } else if (this.classList.contains('clockwise')) {\n      rotate_int -= 1;\n    }\n    carousel.dataset.rotateInt = rotate_int;\n    animate_slider(carousel);\n  };\n  for (var i = 0; i < carousels.length; i++) {\n    var carousel = carousels[i];\n    var inner = carousel.querySelector('.inner-carousel');\n    var cards = carousel.querySelectorAll('.inner-carousel > div');\n    var size = cards.length;\n    var panelSize = inner.clientWidth;\n    var translateZ = Math.round(panelSize / 2 / Math.tan(Math.PI / size)) * 1.7;\n    inner.style.transform = 'rotateY(0deg) translateZ(-' + translateZ + 'px)';\n    var btnLeft = carousel.querySelector('.button-spin.counterclockwise');\n    if (btnLeft !== null) {\n      btnLeft.addEventListener('click', rotateHandler, false);\n    }\n    var btnRight = carousel.querySelector('.button-spin.clockwise');\n    if (btnRight !== null) {\n      btnRight.addEventListener('click', rotateHandler, false);\n    }\n    animate_slider(carousel);\n  }\n\n  function animate_slider(carousel) {\n    var rotate_int = parseInt(carousel.dataset.rotateInt || 0);\n    var inner = carousel.querySelector('.inner-carousel');\n    var cards = carousel.querySelectorAll('.inner-carousel > div');\n    var size = cards.length;\n    var panelSize = inner.clientWidth;\n    var translateZ = Math.round(panelSize / 2 / Math.tan(Math.PI / size)) * 1.7;\n    var rotateY = 0;\n    var ry = 360 / size;\n    rotateY = ry * rotate_int;\n\n    for (var i = 0; i < size; i++) {\n      var z = rotate_int * ry + i * ry;\n      var child = cards[i];\n      child.style.transform =\n        'rotateY(' +\n        z +\n        'deg) translateZ(' +\n        translateZ +\n        'px) rotateY(' +\n        (-z).toString() +\n        'deg)';\n      child.classList.remove('clockwise');\n      child.classList.remove('front');\n      child.classList.remove('counterclockwise');\n      child.removeEventListener('click', rotateHandler, false);\n      var zz = z % 360;\n      if (zz === 0) {\n        child.classList.add('front');\n      } else if (zz === ry || zz === -360 + ry) {\n        child.classList.add('clockwise');\n        child.addEventListener('click', rotateHandler, false);\n      } else if (zz === 360 - ry || zz === 0 - ry) {\n        child.classList.add('counterclockwise');\n        child.addEventListener('click', rotateHandler, false);\n      }\n    }\n  }\n}\n\ncardCarousel3d(document.querySelectorAll('.card-carousel'));\n"],"names":["document","addEventListener","mobileMenu","querySelector","openMenuBtn","closeMenuBtn","toggleMenu","classList","toggle","refs","openModalBtn","closeModalBtn","modal","toggleModal","carousels","rotateHandler","evt","carousel","this","parentElement","contains","rotate_int","parseInt","dataset","rotateInt","animate_slider","i1","length","carousel1","inner","size","querySelectorAll","panelSize","clientWidth","translateZ","Math","round","tan","PI","style","transform","btnLeft","btnRight","cards","ry","i","z","child","toString","remove","removeEventListener","zz","add","$b8f9b7833fa37166$var$cardCarousel3d"],"version":3,"file":"index.007c0d19.js.map"}